<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>org.cache2k</groupId>
  <artifactId>cache2k-parent</artifactId>
  <packaging>pom</packaging>
  <version>0.28-SNAPSHOT</version>
  <name>cache2k parent</name>
  <description>cache2k is a well engineered high performance in-memory Java cache. It implements
    latest eviction algorithms and coding techniques to achieve performance about 10 times better
    then existing cache solutions. cache2k comes with a clean and concise API. The API is currently
    still evolving until version 1.0 is reached.
  </description>
  <url>http://cache2k.org</url>
  <inceptionYear>2000</inceptionYear>
  <organization>
    <name>headissue GmbH, Munich</name>
    <url>http://headissue.com</url>
  </organization>

  <issueManagement>
    <system>GitHub</system>
    <url>https://github.com/headissue/cache2k/issues</url>
  </issueManagement>

  <licenses>
    <license>
      <name>Apache 2</name>
      <url>http://www.apache.org/licenses/LICENSE-2.0</url>
      <distribution>repo</distribution>
    </license>
  </licenses>

  <scm>
    <connection>scm:git:git@github.com:headissue/cache2k.git</connection>
    <developerConnection>scm:git:git@github.com:headissue/cache2k.git</developerConnection>
    <url>https://github.com/headissue/cache2k.git</url>
  </scm>

  <developers>
    <developer>
      <name>Jens Wilke</name>
      <timezone>+1</timezone>
    </developer>
  </developers>

  <modules>
    <module>api</module>
    <module>jmx-api</module>
    <module>core</module>
    <module>ee</module>
    <module>junit-util</module>
    <module>variant/all</module>
    <module>osgi-test</module>
    <module>xml-config</module>
    <module>doc</module>
    <module>jcache/provider</module>
    <module>jcache/tests</module>
    <module>jcache/api</module>
  </modules>

  <properties>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <jcache.version>1.0.0</jcache.version>
    <jacoco-maven-plugin-version>0.7.5.201505241946</jacoco-maven-plugin-version>
    <h7e.recycle.test.coverage>jacoco-instrument,fast-tests</h7e.recycle.test.coverage>
  </properties>

  <build>
    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>3.1</version>
          <configuration>
            <source>1.6</source>
            <target>1.6</target>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>license-maven-plugin</artifactId>
          <version>1.5</version>
          <configuration>
            <licenseName>apache_v2</licenseName>
          </configuration>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-jar-plugin</artifactId>
          <version>2.4</version>
          <configuration>
            <archive>
              <manifest>
                <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
              </manifest>
              <manifestEntries>
                <Implementation-Build>${buildNumber}</Implementation-Build>
              </manifestEntries>
            </archive>
          </configuration>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-surefire-plugin</artifactId>
          <version>2.19.1</version>
          <configuration>
            <trimStackTrace>false</trimStackTrace>
            <excludedGroups>org.cache2k.junit.StorageTests,org.cache2k.junit.TimingTests</excludedGroups>
            <runOrder>random</runOrder>
          </configuration>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-failsafe-plugin</artifactId>
          <version>2.19.1</version>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-deploy-plugin</artifactId>
          <version>2.8.2</version>
        </plugin>

        <!-- needed for the special site theme -->
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-site-plugin</artifactId>
          <version>3.3</version>
          <dependencies>
            <dependency>
              <groupId>org.apache.maven.doxia</groupId>
              <artifactId>doxia-module-markdown</artifactId>
              <version>1.4</version>
            </dependency>

            <dependency>
              <groupId>lt.velykis.maven.skins</groupId>
              <artifactId>reflow-velocity-tools</artifactId>
              <version>1.1.1</version>
            </dependency>
            <!-- Reflow skin requires Velocity >= 1.7  -->
            <dependency>
              <groupId>org.apache.velocity</groupId>
              <artifactId>velocity</artifactId>
              <version>1.7</version>
            </dependency>
          </dependencies>
        </plugin>

        <plugin>
          <groupId>org.apache.felix</groupId>
          <artifactId>maven-bundle-plugin</artifactId>
          <version>3.0.1</version>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-javadoc-plugin</artifactId>
          <version>2.9.1</version>
        </plugin>

      </plugins>
    </pluginManagement>

    <plugins>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>buildnumber-maven-plugin</artifactId>
        <version>1.4</version>
        <executions>
          <execution>
            <phase>validate</phase>
            <goals>
              <goal>create</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <doCheck>false</doCheck>
          <doUpdate>false</doUpdate>
          <getRevisionOnlyOnce>true</getRevisionOnlyOnce>
          <format>{0}-{1,date,yyyyMMddHHmmss}</format>
          <items>
            <item>scmVersion</item>
            <item>timestamp</item>
          </items>
        </configuration>
      </plugin>

      <!-- taken from sonatype oss parent -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-source-plugin</artifactId>
        <version>2.4</version>
        <executions>
          <execution>
            <id>attach-sources</id>
            <goals>
              <goal>jar</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <!-- taken from sonatype oss parent -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-javadoc-plugin</artifactId>
        <executions>
          <execution>
            <id>attach-javadocs</id>
            <goals>
              <goal>jar</goal>
            </goals>
          </execution>
        </executions>

        <configuration>
          <!-- no aggregation, we want to have docs on the API package alone -->
          <aggregate>false</aggregate>
          <!--
          <source>${maven.compile.source}</source>
          <encoding>${commons.encoding}</encoding>
          <docEncoding>${commons.docEncoding}</docEncoding>
          -->
          <linksource>true</linksource>
          <links>
            <link>http://docs.oracle.com/javase/7/docs/api/</link>
          </links>
          <quiet>true</quiet>
          <bottom>
            <![CDATA[<a href="http://cache2k.org" target="_blank">cache2k</a> API documentation. Copyright &#169; {inceptionYear}&#x2013;{currentYear} <a href="http://headissue.com" target="_blank">headissue GmbH, Munich</a>.]]>
          </bottom>
        </configuration>
      </plugin>
    </plugins>

    <extensions>
      <!-- Needed for scpexe deploy -->
      <extension>
        <groupId>org.apache.maven.wagon</groupId>
        <artifactId>wagon-ssh-external</artifactId>
      </extension>
    </extensions>
  </build>

  <distributionManagement>
    <site>
      <id>cache2k</id>
      <url>file:/tmp/cache2k-site</url>
    </site>
  </distributionManagement>

  <profiles>

    <!-- profile for site build of cache2k.org -->
    <profile>
      <id>site</id>

      <reporting>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-project-info-reports-plugin</artifactId>
            <version>2.7</version>
            <reportSets>
              <reportSet>
                <reports>
                </reports>
              </reportSet>
            </reportSets>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-javadoc-plugin</artifactId>
            <configuration>
              <additionalparam>-Xdoclint:none</additionalparam>
              <!-- no aggregation, we want to have docs on the API package alone -->
              <aggregate>false</aggregate>
              <!--
              <source>${maven.compile.source}</source>
              <encoding>${commons.encoding}</encoding>
              <docEncoding>${commons.docEncoding}</docEncoding>
              -->
              <linksource>true</linksource>
              <links>
                <link>http://docs.oracle.com/javase/7/docs/api/</link>
              </links>
              <quiet>true</quiet>
              <bottom>
                <![CDATA[<a href="http://cache2k.org" target="_blank">cache2k</a> API documentation. Copyright &#169; {inceptionYear}&#x2013;{currentYear} <a href="https://headissue.com" target="_blank">headissue GmbH, Munich</a>.]]>
              </bottom>
            </configuration>
            <reportSets>
              <reportSet>
                <id>html</id>
                <reports>
                  <report>javadoc</report>
                </reports>
              </reportSet>
            </reportSets>
          </plugin>
        </plugins>
      </reporting>
    </profile>

    <!--
         Profile is used to deploy an internal pre release for integration tests with the
         rest of the headissue software.
    -->
    <profile>
      <id>headissue-release</id>
      <distributionManagement>
        <repository>
          <id>headissue.public</id>
          <name>headissue public repository</name>
          <url>${h7e.release.deploy.url}</url>
        </repository>
        <snapshotRepository>
          <id>headissue.snapshot</id>
          <name>Internal Snapshot Repository</name>
          <url>${h7e.snapshot.deploy.url}</url>
        </snapshotRepository>
      </distributionManagement>
    </profile>

    <!-- profile used for the oss release via sonatype. This is taken from
         oss-parent-9.pom -->
    <profile>
      <id>sonatype-oss-release</id>
      <distributionManagement>
        <snapshotRepository>
          <id>sonatype-nexus-snapshots</id>
          <name>Sonatype Nexus Snapshots</name>
          <url>https://oss.sonatype.org/content/repositories/snapshots/</url>
        </snapshotRepository>
        <repository>
          <id>sonatype-nexus-staging</id>
          <name>Nexus Release Repository</name>
          <url>https://oss.sonatype.org/service/local/staging/deploy/maven2/</url>
        </repository>
      </distributionManagement>
      <build>
        <plugins>
          <!-- sign artifact, see:
               https://docs.sonatype.org/display/Repository/How+To+Generate+PGP+Signatures+With+Maven
               override sonatype key signing to configure correct key name
               -->
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-gpg-plugin</artifactId>
            <version>1.4</version>
            <configuration>
              <keyname>D37F5C87</keyname>
            </configuration>
            <executions>
              <execution>
                <id>sign-artifacts</id>
                <phase>verify</phase>
                <goals>
                  <goal>sign</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>

    <!-- enabling the jacoco agent for running the tests. results are written to target/jacoco.exec -->
    <profile>
      <id>jacoco-instrument</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.jacoco</groupId>
            <artifactId>jacoco-maven-plugin</artifactId>
            <version>${jacoco-maven-plugin-version}</version>
            <executions>
              <execution>
                <id>default-prepare-agent</id>
                <goals>
                  <goal>prepare-agent</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>

    <!-- profile to merge a report for the total test coverage. use it with
         mvn -Pjacoco-merge jacoco:merge jacoco:report -->
    <profile>
      <id>jacoco-merge</id>
      <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <skip>true</skip>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <version>${jacoco-maven-plugin-version}</version>
                <configuration>
                    <fileSets>
                        <fileSet>
                            <directory>${project.basedir}</directory>
                            <includes>
                                <include>**/*.exec</include>
                            </includes>
                        </fileSet>
                    </fileSets>
                    <destFile>${project.build.directory}/jacoco.exec</destFile>
                </configuration>
            </plugin>
        </plugins>
      </build>
    </profile>

    <!--
         profile for doing static analysis, normal reports are switched off
         run with: mvn -Pstatic-analysis site
    -->
    <profile>
      <id>static-analysis</id>
      <reporting>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-pmd-plugin</artifactId>
            <version>3.5</version>
            <configuration>
              <skipEmptyReport>false</skipEmptyReport>
            </configuration>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-project-info-reports-plugin</artifactId>
            <version>2.8.1</version>
            <reportSets>
              <reportSet>
                <reports>
                  <!-- generate no normal report at all -->
                </reports>
              </reportSet>
            </reportSets>
          </plugin>
        </plugins>
      </reporting>
    </profile>

    <!-- fast tests are run with coverage -->
    <profile>
      <id>fast-tests</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-surefire-plugin</artifactId>
            <!-- we only exclude, so the TCK tests are run, too -->
            <configuration>
              <excludedGroups>org.cache2k.junit.StorageTests,org.cache2k.junit.SlowTests,org.cache2k.junit.TimingTests</excludedGroups>
              <!-- jacoco instrumentation is not working GC debugging....
              <argLine>-Xmx256m -XX:+HeapDumpOnOutOfMemoryError -XX:+PrintGCDetails</argLine>
              -->
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>

    <profile>
      <id>slow-tests</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-surefire-plugin</artifactId>
            <configuration>
              <groups>org.cache2k.junit.SlowTests</groups>
              <excludedGroups>org.cache2k.junit.StorageTests,org.cache2k.junit.TimingTests</excludedGroups>
              <parallel>classes</parallel>
              <threadCount>5</threadCount>
              <argLine>-Xmx128m -XX:+HeapDumpOnOutOfMemoryError -XX:+PrintGCDetails</argLine>
              <!-- make this test more verbose to investigate a VM crash
              <argLine>-XX:+HeapDumpOnOutOfMemoryError -XX:+PrintGC -XX:+PrintCompilation</argLine>
               -->
              <!--
              <argLine>-XX:+PrintGC</argLine>
              -->
              <!--
                   Use a lower safety gap, since some tests will use a time value for expiry higher then
                   the safety gap.
              -->
              <systemPropertyVariables>
                <org.cache2k.core.HeapCache.Tunable.sharpExpirySafetyGapMillis>1765</org.cache2k.core.HeapCache.Tunable.sharpExpirySafetyGapMillis>
              </systemPropertyVariables>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>

    <profile>
      <id>android</id>
      <modules>
        <module>android-test</module>
      </modules>
    </profile>

    <profile>
      <id>osgi-test</id>
      <modules>
        <module>osgi-test</module>
      </modules>
    </profile>

    <profile>
      <id>jcache-tck-test-clone</id>
      <modules>
        <module>jcache/tck-test-clone</module>
      </modules>
    </profile>

    <!-- automatically disable doclint, as proposed here:
         http://stackoverflow.com/questions/15886209/maven-is-not-working-in-java-8-when-javadoc-tags-are-incomplete
         -->
    <profile>
      <id>doclint-java8-disable</id>
      <activation>
        <jdk>[1.8,)</jdk>
      </activation>

      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-javadoc-plugin</artifactId>
            <configuration>
              <additionalparam>-Xdoclint:none</additionalparam>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>

  </profiles>

</project>
